global key
InitKeyboard();

while 1
   
    pause(0.1);
    switch key
        case 'uparrow'
            disp('Up Arrow Pressed!');
            brick.MoveMotor('A',50);
            brick.MoveMotor('D',50);
            brick.SetColorMode(3,0);
            brightness = brick.LightReflect(3);
            disp('Color: ');
            disp(brightness)
            distance = brick.UltrasonicDist(4);
            disp('Distance: ');
            disp(distance)
        case 'downarrow'
            disp('Down Arrow Pressed!');
            brick.MoveMotor('A',-50);
            brick.MoveMotor('D',-50);
            brick.SetColorMode(3,0);
            disp('Color: ');
            disp(brightness)
            distance = brick.UltrasonicDist(4);
            disp('Distance: ');
            
        case 'leftarrow'
            disp('Left Arrow Pressed!');
            brick.MoveMotor('A',-50);
            brick.MoveMotor('D',50);
            brick.SetColorMode(3,0);
            brightness = brick.LightReflect(3);
            disp(brightness)
        case 'rightarrow'
            disp('Right Arrow Pressed!');
            brick.MoveMotor('A',50);
            brick.MoveMotor('D',-50);
            brick.SetColorMode(3,0);
            disp('Color: ');
            disp(brightness)
            distance = brick.UltrasonicDist(4);
            disp('Distance: ');
        case '0'
            disp('No Key Pressed');
            brick.StopMotor('A','Brake');
            brick.StopMotor('D','Brake');
            brick.SetColorMode(3,0);
            disp('Color: ');
            disp(brightness)
            distance = brick.UltrasonicDist(4);
            disp('Distance: ');
            
        case 'u'
            disp('Ramp Up')
            brick.MoveMotor('B',5) 
            
        case 'd'
            disp('Ramp Down')
            brick.MoveMotor('B',-5)
        case 'q'
            break;
    end
end
CloseKeyboard();
